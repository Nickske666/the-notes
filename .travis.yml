# NB: don't set `language: haskell` here
language: c
sudo: false

cache:
  directories:
    - $HOME/.cabsnap
    - $HOME/.cabal/packages

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar

# The following lines enable several GHC versions and/or HP versions
# to be tested; often it's enough to test only against the last
# release of a major GHC version. Setting HPVER implictly sets
# GHCVER. Omit lines with versions you don't need/want testing for.
matrix:
  include:
    # - env: CABALVER=1.16 GHCVER=7.4.2
    #   compiler: ": #GHC 7.4.2"
    #   addons: {apt: {packages: [cabal-install-1.16,ghc-7.4.2,alex-3.1.4,happy-1.19.5], sources: [hvr-ghc]}}
    # - env: CABALVER=1.16 GHCVER=7.6.3
    #   compiler: ": #GHC 7.6.3"
    #   addons: {apt: {packages: [cabal-install-1.16,ghc-7.6.3,alex-3.1.4,happy-1.19.5], sources: [hvr-ghc]}}
    # - env: CABALVER=1.18 GHCVER=7.8.4
    #   compiler: ": #GHC 7.8.4"
    #   addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4,alex-3.1.4,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.1
      compiler: ": #GHC 7.10.1"
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.1,alex-3.1.4,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.2
      compiler: ": #GHC 7.10.2"
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.2,alex-3.1.4,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=head
      compiler: ": #GHC head"
      addons: {apt: {packages: [cabal-install-1.22,ghc-head,alex-3.1.4,happy-1.19.5], sources: [hvr-ghc]}}

      # allow_failures:
      #   - env: CABALVER=1.22 GHCVER=head

addons:
  apt:
    packages:
      - texlive-full
      - latexmk
      - dvipng
      - python-pygments

before_install:
 - unset CC
 - export HAPPYVER=1.19.5
 - export ALEXVER=3.1.4
 - export PATH=~/.cabal/bin:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:/opt/happy/$HAPPYVER/bin:/opt/alex/$ALEXVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ];
   then
    zcat $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz >
         $HOME/.cabal/packages/hackage.haskell.org/00-index.tar;
   fi
 - travis_retry cabal update
 - "sed -i  's/^jobs:.*$/jobs: 2/' $HOME/.cabal/config"
 - cabal install --only-dependencies --enable-tests --enable-benchmarks --dry -v the-notes.cabal hlint > installplan.txt
 - sed -i -e '1,/^Resolving /d' installplan.txt; cat installplan.txt

 # check whether current requested install-plan matches cached package-db snapshot
 - if diff -u installplan.txt $HOME/.cabsnap/installplan.txt;
   then
     echo "cabal build-cache HIT";
     rm -rfv .ghc;
     cp -a $HOME/.cabsnap/ghc $HOME/.ghc;
     cp -a $HOME/.cabsnap/lib $HOME/.cabsnap/share $HOME/.cabsnap/bin $HOME/.cabal/;
   else
     echo "cabal build-cache MISS";
     rm -rf $HOME/.cabsnap;
     mkdir -p $HOME/.ghc $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin;
     cabal install --only-dependencies --enable-tests the-notes.cabal hlint;
     if [ "$GHCVER" = "7.10.1" ]; then cabal install Cabal-1.22.4.0; fi;
   fi

 # snapshot package-db on cache miss
 - if [ ! -d $HOME/.cabsnap ];
   then
      echo "snapshotting package-db to build-cache";
      mkdir $HOME/.cabsnap;
      cp -a $HOME/.ghc $HOME/.cabsnap/ghc;
      cp -a $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin installplan.txt $HOME/.cabsnap/;
   fi
 - cabal install hlint

# Here starts the actual work to be performed for the package under
# test; any command which exits with a non-zero exit code causes the
# build to fail.
script:
 # -v2 provides useful information for debugging
 - cabal configure --enable-tests --enable-benchmarks -v2

 # this builds all libraries and executables
 - cabal install
 - cabal sdist

 # Check whether the latex can be compiled
 - the-notes

 # Do all the consistency checks
 - ./bin/pre_push_test.sh

