module Probability.RandomVariable (randomVariable) where

import           Notes

import qualified Prelude as P (map)

randomVariable :: Notes
randomVariable = notesPart "random-variable" body

psDec :: Note
psDec = s ["Let ", m prsp, " be a ", ix "probability space"]


body :: Note
body = do
  section "Random Variables"
  intro
  distributionFunctions
  quantileFunction
  typesOfRandomVariables

intro :: Note
intro = do
  borealsDefinition
  randomVariableDefinition
  saMeasureDefinition
  borealMesureDefinition
  randomVariableCondition
  borealMeasurableInducesProbabilityMeasure


borealsDefinition :: Note
borealsDefinition = de $ do
  s [m boreals, " is the ", m sigma, "-algebra generated by ", m (setcmpr (ocint (minfty) a) (minfty < a < pinfty))]
  where a = "a"

randomVariableDefinition :: Note
randomVariableDefinition = de $ do
  psDec

  s ["A real function as follows is called a ", term "random variable", or, term "stochastic variable"]
  ma $ prrvfunc
  ma $ fa (b ∈ boreals) $ funinv x `fn` b =: setcmpr omega (x `fn` omega ∈ b)

  where
    b = "B"
    x = "X"

saMeasureDefinition :: Note
saMeasureDefinition = de $ do
  psDec
  s ["Let ", m prrv, " be a random variable"]
  s [m prrv, " is called a ", m prsa, "-", term "measure"]

borealMesureDefinition :: Note
borealMesureDefinition = de $ do
  s ["A ", m boreals, "-measure in the measurable space ", m (prmspace reals boreals), " is called ", term "Borel-measure"]

randomVariableCondition :: Note
randomVariableCondition = thm $ do
  s ["A function ", m (fun x reals reals), " is a random variable in the measurable space ", m (prmspace reals boreals), " if and only if the following holds"]
  ma $ fa (a ∈ reals) $ funinv x `fn` (ocint minfty a) =: setcmpr omega (prrv `fn` omega <= a) ∈ prsa
  where
    a = "A"
    x = "X"

borealMeasurableInducesProbabilityMeasure :: Note
borealMeasurableInducesProbabilityMeasure = thm $ do
  s ["A Borel-measurable function induces a probability measure ", m (prpm !: prrv), on, m boreals, " in ", m prbsp, " as follows"]
  ma $ px b =: prob (x ∈ b) =: prob (funinv x `fn` b)
  ma $ px b =: prob (setcmpr (omega ∈ pruniv) (prvrv omega ∈ b))
  toprove
  where
    b = "B"
    x = "X"
    px = fn (prpm !: prrv)

distributionFunctions :: Note
distributionFunctions = do
  subsection "Cumulative distribution function"
  cumulativeDistributionFunctionDefinition
  distributionFunctionCondition
  distributionBetweenValues
  distributionAfterValue

cumulativeDistributionFunctionDefinition :: Note
cumulativeDistributionFunctionDefinition = de $ do
  psDec
  s ["Let ", m prrvfunc, " be a random variable"]
  s ["The ", term "cumulative distribution function", " (", term "CDF", ") or ", term "termdistribution function", " as follows"]
  ma $ func prdf reals reals a $ prd (ocint minfty a) =: prob (setcmpr o (prvrv o)) =: prob (prrv <= a)
  where
    a = "a"
    o = omega

distributionFunctionCondition :: Note
distributionFunctionCondition = thm $ do
  s ["Let ", m prrv, " be a random variable in ", m prbsp]
  s ["A function ", m (fun prdf reals reals), " is a ", ix "cumulative distribution function", " if and only if it has the following three properties"]
  enumerate $ do
    item $ do
      s [m prdf, " is monotonically increasing"]
      ma $ fa (cs [a, b] ∈ reals) $ (a <= b) ⇒ (prd a <= prd b)
    item $ do
      ma $ lim a minfty (prd a) =: 0
      ma $ lim a pinfty (prd a) =: 1
    item $ do
      s [m prdf, " is right-continuous"]
      ma $ fa (a ∈ reals) $ rlim h 0 (prd $ a + h) =: prd a
      refneeded "right-continuous"
  noproof

  where
    a = "a"
    b = "b"
    h = "h"

bdfDec :: Note
bdfDec = s ["Let ", m prdf, " be a distribution function in ", m prbsp]

distributionBetweenValues :: Note
distributionBetweenValues = thm $ do
  bdfDec
  ma $ fa (cs [a, b] ∈ reals) $ prob (a < prrv <= b) =: prd b - prd a

  toprove

  where
    a = "a"
    b = "b"

distributionAfterValue :: Note
distributionAfterValue = thm $ do
  bdfDec
  ma $ fa (a ∈ reals) $ prob (prrv > a) =: 1 - prd a

  toprove


  where a = "a"


quantileFunction :: Note
quantileFunction = do
  subsection "The quantile function"
  quantileFunctionDefinition
  quartileDefinition
  medianDefinition

quantileFunctionDefinition :: Note
quantileFunctionDefinition = de $ do
  s ["The ", term "quantile function", for, m prbsp, " is the inverse of the distribution function ", m prdf]
  s ["The value ", m (prq p), " is the smallest value ", m (a ∈ reals), " for which ", m (prd a >= p), " holds"]
  where
    a = "a"
    p = "p"

quartileDefinition :: Note
quartileDefinition = de $ do
  s ["The ", m "0.25", ", ", m "0.5", and, m "0.75", " quantile are respectively called the first, second and third ", term "quartile"]

medianDefinition :: Note
medianDefinition = de $ do
  s ["The second quartile is called the ", term "median"]


typesOfRandomVariables :: Note
typesOfRandomVariables = do
  subsection "Types of random variables"
  discreteRandomVariables
  continuousRandomVariables

discreteRandomVariables :: Note
discreteRandomVariables = do
  subsubsection "Discrete random variables"

continuousRandomVariables :: Note
continuousRandomVariables = do
  subsubsection "Continuous random variables"
