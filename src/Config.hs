module Config (renderConfig) where

import           Prelude              (Int)

import           Control.Monad.Reader (ask)
import           Data.List            (intercalate, splitAt)
import qualified Data.Text            as T

import           Notes


renderConfig :: Note
renderConfig = do
    comm1 "section*" "Configuration"
    conf <- ask
    "The code for this pdf was generated by running the `the notes' generator with the following configuration."
    verbatim $ T.pack $ breakUp $ show conf
    raw "\n"

breakUp :: String -> String
breakUp = intercalate "\n" . chunk 80

chunk :: Int -> [a] -> [[a]]
chunk _ [] = []
chunk n xs = y1 : chunk n y2
  where (y1, y2) = splitAt n xs

